{"remainingRequest":"F:\\project\\port_\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!F:\\project\\port_\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\project\\port_\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\project\\port_\\src\\components\\HomeNav\\Information.vue?vue&type=template&id=0decdcc1&scoped=true&","dependencies":[{"path":"F:\\project\\port_\\src\\components\\HomeNav\\Information.vue","mtime":1626856557222},{"path":"F:\\project\\port_\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\project\\port_\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"F:\\project\\port_\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\project\\port_\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}