{"remainingRequest":"F:\\portProject\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\portProject\\src\\components\\HomeNav\\Information.vue?vue&type=template&id=0decdcc1&scoped=true&","dependencies":[{"path":"F:\\portProject\\src\\components\\HomeNav\\Information.vue","mtime":1627459152679},{"path":"F:\\portProject\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\portProject\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"F:\\portProject\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\portProject\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}