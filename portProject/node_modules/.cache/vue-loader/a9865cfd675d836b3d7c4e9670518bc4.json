{"remainingRequest":"F:\\portProject\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!F:\\portProject\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\portProject\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\portProject\\src\\components\\WorkWarnNav\\EarlyWarning.vue?vue&type=template&id=50934dcc&scoped=true&","dependencies":[{"path":"F:\\portProject\\src\\components\\WorkWarnNav\\EarlyWarning.vue","mtime":1627030100461},{"path":"F:\\portProject\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\portProject\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"F:\\portProject\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\portProject\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}